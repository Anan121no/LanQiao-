package _2021_B2;
/*
 * 一个正整数的双阶乘，表示不超过这个正整数且与它有相同奇偶性的所有正整数乘积。n nn 的双阶乘用 n ! ! n!!n!! 表示。
  例如：
  3 ! ! = 3 × 1 = 3 3!! = 3 × 1 = 33!!=3×1=3。
  8 ! ! = 8 × 6 × 4 × 2 = 384 8!! = 8 × 6 × 4 × 2 = 3848!!=8×6×4×2=384。
  11 ! ! = 11 × 9 × 7 × 5 × 3 × 1 = 10395 11!! = 11 × 9 × 7 × 5 × 3 × 1 = 1039511!!=11×9×7×5×3×1=10395。
  请问，2021 ! ! 2021!!2021!! 的最后 5 55 位（这里指十进制位）是多少？
  注意：2021 ! ! = 2021 × 2019 × ⋅ ⋅ ⋅ × 5 × 3 × 1 2021!! = 2021 × 2019 × · · · × 5 × 3 × 12021!!=2021×2019×⋅⋅⋅×5×3×1。
  提示：建议使用计算机编程解决问题。
答案提交
  这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。
59375
————————————————
版权声明：本文为CSDN博主「肖有量」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/qq_43449564/article/details/121003236
 */
public class _02双阶乘 {
	public static void main(String[] args) {
		long a = 1;
		for (long i = 2021; i >= 1; i-=2) {
			a *=i;
			a %=100000;
		}
		System.out.println(a);
	}
}
